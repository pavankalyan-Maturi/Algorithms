v=4
graph=[]
graph.append([0, 1, 10])
graph.append([0, 2, 6])
graph.append([0, 3, 5])
graph.append([1, 3, 15])
graph.append([2, 3, 4])
def parent(v,li):
    if li[v]<0:
        return v
    else:
        return parent(li[v],li)
def cycle(li,edge):
    u,v,w=edge
    if li[u]=="-1" and li[v]=="-1":
        li[v]=u
        li[u]=-1
    elif li[u]=="-1":
        p=parent(v,li)
        li[u]=p
        li[p]-=1
    elif li[v]=="-1":
        p=parent(u,li)
        li[v]=p
        li[p]-=1
    else:
        pu=parent(u,li)
        pv=parent(v,li)
        if pu==pv:
            return False
        if abs(pu)>abs(pv):
            li[v]=pu
            li[pu]-=1
        else:
            li[u]=pv
            li[pv]-=1
    return True
            
        
def krushalMST(graph,v):
    graph=sorted(graph,key=lambda item:item[2])
    li=["-1"]*v
    ans=[]
    dis=0
    i=0
    while(len(ans)<v-1):
        if(cycle(li,graph[i])):
            ans.append(graph[i])
            dis+=graph[i][2]
        i+=1
    if(len(ans)==v-1):
        return dis
    else:
        return -1
print(krushalMST(graph,v))
